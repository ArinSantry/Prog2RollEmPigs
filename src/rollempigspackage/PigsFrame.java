/*
 * File: PigsFrame.java
 * Author: Arin Santry
 * Date due: 2/19/19
 * Desc.: JFrame for a game of Roll 'em Pigs.
 */
package rollempigspackage;
import java.awt.*;

/**
 *
 * @author erins
 */
public class PigsFrame extends javax.swing.JFrame {

    private int playerTurn; // keep track of whose turn it is
    // player names
    private String player1Name;
    private String player2Name;
    // instantiate Player class for each player
    Player player1 = new Player();
    Player player2 = new Player();
    // dice constants
    private final int NUM_DICE = 2;
    private final DieLabel[] dieArray = new DieLabel[NUM_DICE]; 
    // keep track of players' scores before they are counted by the Player class
    private int player1Score;
    private int player2Score;


    /**
     * Creates new form PigsFrame
     */
    public PigsFrame() {
        initComponents();
        getContentPane().setBackground(Color.GRAY); 
        dieArray[0] = dieLabel1;
        dieArray[1] = dieLabel2;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        player1NameLabel = new javax.swing.JLabel();
        player1ScoreLabel = new javax.swing.JLabel();
        player2NameLabel = new javax.swing.JLabel();
        player2ScoreLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        rollButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        diePanel = new javax.swing.JPanel();
        dieLabel2 = new rollempigspackage.DieLabel();
        dieLabel1 = new rollempigspackage.DieLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setBackground(new java.awt.Color(0, 0, 0));
        label1.setFont(new java.awt.Font("Forte", 0, 36)); // NOI18N
        label1.setForeground(new java.awt.Color(204, 204, 204));
        label1.setText("Roll 'em Pigs");

        player1NameLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        player1NameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player1NameLabel.setText("Player 1");

        player1ScoreLabel.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        player1ScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player1ScoreLabel.setText("0");

        player2NameLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        player2NameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player2NameLabel.setText("Player 2");

        player2ScoreLabel.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        player2ScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player2ScoreLabel.setText("0");

        statusLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setText(" ");

        rollButton.setText("Roll");
        rollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        diePanel.setLayout(new java.awt.GridLayout(1, 2));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(player1NameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(player1ScoreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(diePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dieLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dieLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(player2ScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(player2NameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(rollButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(diePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(player1NameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(player1ScoreLabel))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(player2NameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(player2ScoreLabel)
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dieLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dieLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(statusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rollButton)
                    .addComponent(stopButton))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // game window opens
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // show dialog boxes asking for names immediately when the window opens
        // and set the name labels accordingly
        player1Name = javax.swing.JOptionPane.showInputDialog(null, 
                             "Player 1, enter your name: ", "Player 1 name");
        player1NameLabel.setText(player1Name);
        player2Name = javax.swing.JOptionPane.showInputDialog(null, 
                             "Player 2, enter your name: ", "Player 2 name");
        player2NameLabel.setText(player2Name);
        // change player 1's name to red to show that it is their turn
        player1NameLabel.setForeground(Color.RED);
        player1ScoreLabel.setForeground(Color.RED);
        statusLabel.setText(player1Name + ", it's your turn.");
        playerTurn = 1; // player 1's turn

    }//GEN-LAST:event_formWindowOpened

    // user clicks the roll button
    private void rollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollButtonActionPerformed
        if (playerTurn == 1) // if it's player 1's turn
        {            
            player1.rollDie(dieArray[0], dieArray[1]); // player rolls dice
            
            if (player1.isGameScoreLost()) // check if they lost their game score
            {
                    player1.reset(); // reset their Player class
                    player1ScoreLabel.setText("0"); // reset displayed score
                    statusLabel.setText(player1Name + ", you lost your score! " 
                    + player2Name + ", it's your turn.");
                    
                    // change label colors to show that it's player 2's turn
                    player1NameLabel.setForeground(Color.BLACK);
                    player1ScoreLabel.setForeground(Color.BLACK);
                    player2NameLabel.setForeground(Color.RED);
                    player2ScoreLabel.setForeground(Color.RED);
                    playerTurn = 2; // player 2's turn
            }
            
            else if (player1.isTurnScoreLost()) // check if they lost their turn score
            {
                statusLabel.setText(player1Name + ", you lost your turn! " + 
                                    player2Name + ", it's your turn.");
                
                // change label colors to show that it's player 2's turn
                player1NameLabel.setForeground(Color.BLACK);
                player1ScoreLabel.setForeground(Color.BLACK);
                player2NameLabel.setForeground(Color.RED);
                player2ScoreLabel.setForeground(Color.RED);
                playerTurn = 2; // player 2's turn
            }
            
            else if (player1.hasWon()) // check if they won
            {
                // add turnScore and gameScore from their Player class
                // because the final score is not tallied until they click
                // the stop button. player1Score will show the correct value
                player1Score = player1.getTurnScore() + player1.getGameScore();
                player1ScoreLabel.setText(Integer.toString(player1Score));
                // show message dialog congradulating player 1 and asking
                // if they want to play again
                int result = javax.swing.JOptionPane.showConfirmDialog(null, player1Name +
                    ", you won! Your score was " + player1Score
                    + ". Would you like ot play again?", "Play again?",
                    javax.swing.JOptionPane.YES_NO_OPTION);
                
                if (result == javax.swing.JOptionPane.YES_OPTION) // answer yes
                {
                    // reset both Player classes
                    player1.reset();
                    player2.reset();
                    //reset score labels
                    player1ScoreLabel.setText("0");
                    player2ScoreLabel.setText("0");
                    // change colors to show that it's player 1's turn
                    player1NameLabel.setForeground(Color.RED);
                    player1ScoreLabel.setForeground(Color.RED);
                    player2NameLabel.setForeground(Color.BLACK);
                    player2ScoreLabel.setForeground(Color.BLACK);
                    statusLabel.setText(player1Name + ", it's your turn.");
                    playerTurn = 1; // player 1's turn
                }
                
                if (result == javax.swing.JOptionPane.NO_OPTION) // answer no
                {
                    System.exit(0); // close program
                }
            }
            else // otherwise regular turn (no wins or losses)
            {
                // add turnScore and gameScore to show what will be added
                // to the Player class's final count
                player1Score = player1.getTurnScore() + player1.getGameScore();
                // display score and ask if player wants to roll or stop
                statusLabel.setText(player1Name + ", your score is " + 
                        player1Score + ". roll again, or stop?");
            }
        }
        
        else if (playerTurn == 2) // if it's player 2's turn
        {
            player2.rollDie(dieArray[0], dieArray[1]); // player rolls dice
            
            if (player2.isGameScoreLost()) // if they loose their game score
            {
                player2.reset(); // reset their Player class
                player2ScoreLabel.setText("0"); // reset displayed score
                
                statusLabel.setText(player2Name + ", you lost your score! " 
                    + player1Name + ", it's your turn.");
                // change color to show it's player 1's turn
                player1NameLabel.setForeground(Color.RED);
                player1ScoreLabel.setForeground(Color.RED);
                player2NameLabel.setForeground(Color.BLACK);
                player2ScoreLabel.setForeground(Color.BLACK);
                playerTurn = 1; // player 1's turn
            }
            
            else if (player2.isTurnScoreLost()) // if they lose their turn score
            {
                statusLabel.setText(player2Name + ", you lost your turn! " + 
                                    player1Name + ", it's your turn.");
                // change colors to show it's player 1's turn
                player2NameLabel.setForeground(Color.BLACK);
                player2ScoreLabel.setForeground(Color.BLACK);
                player1NameLabel.setForeground(Color.RED);
                player1ScoreLabel.setForeground(Color.RED);
                playerTurn = 1; // player 1's turn
            }
            
            else if (player2.hasWon()) // if player 2 wins
            {
                // set player2Score equal to the turnScore + gameScore
                // to show the final score before it's added in the Player class
                player2Score = player2.getTurnScore() + player2.getGameScore();
                player2ScoreLabel.setText(Integer.toString(player2Score));
                
                // show message dialog congradulating player 2 and showing their
                // score, and asks if they want to play again
                int result = javax.swing.JOptionPane.showConfirmDialog(null, player2Name +
                    ", you won! Your score was " + player2Score
                    + ". Would you like ot play again?", "Play again?",
                    javax.swing.JOptionPane.YES_NO_OPTION);
                
                if (result == javax.swing.JOptionPane.YES_OPTION) // answer yes
                {
                    // reset Player classes
                    player1.reset();
                    player2.reset();
                    // reset displayed scores
                    player1ScoreLabel.setText("0");
                    player2ScoreLabel.setText("0");
                    // change colors to show it's player 1's turn
                    player1NameLabel.setForeground(Color.RED);
                    player1ScoreLabel.setForeground(Color.RED);
                    player2NameLabel.setForeground(Color.BLACK);
                    player2ScoreLabel.setForeground(Color.BLACK);
                    statusLabel.setText(player1Name + ", it's your turn.");
                    playerTurn = 1; // player 1's turn
                }
                
                if (result == javax.swing.JOptionPane.NO_OPTION) // answer no
                {
                    System.exit(0); // close the program
                }
            }
            
            else // otherwise normal round (no wins/losses)
            {
                // calculate player score before it is calculated in the 
                // Player class
                player2Score = player2.getTurnScore() + player2.getGameScore();
                statusLabel.setText(player2Name + ", your score is "
                        + player2Score + ". roll again, or stop?");
            }
        }        
    }//GEN-LAST:event_rollButtonActionPerformed

    // player clicks stop button
    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        if (playerTurn == 1) // if it's player 1's turn
        {
            player1.addTurnScoreToGameScore(); // calculate the total score
            playerTurn = 2; // player 2's turn
            statusLabel.setText(player2Name + ", it's your turn.");
            // change colors to show it's player 2's turn
            player1NameLabel.setForeground(Color.BLACK);
            player1ScoreLabel.setForeground(Color.BLACK);
            player2NameLabel.setForeground(Color.RED);
            player2ScoreLabel.setForeground(Color.RED);
            // set displayed score to show new score
            player1ScoreLabel.setText(Integer.toString(player1.getGameScore()));
            player1.resetTurnScore(); // reset turnScore to 0
        }
        
        else if (playerTurn == 2) // if it's player 2's turn
        {
            player2.addTurnScoreToGameScore(); // caclulate the total score
            playerTurn = 1; // player 1's turn
            statusLabel.setText(player1Name + ", it's your turn.");
            // change colors to show it's player 1's turn
            player2NameLabel.setForeground(Color.BLACK);
            player2ScoreLabel.setForeground(Color.BLACK);
            player1NameLabel.setForeground(Color.RED);
            player1ScoreLabel.setForeground(Color.RED);
            // set displayed score to show new score
            player2ScoreLabel.setText(Integer.toString(player2.getGameScore()));
            player2.resetTurnScore(); // reset turn score to 0
        }
    }//GEN-LAST:event_stopButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PigsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PigsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PigsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PigsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PigsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rollempigspackage.DieLabel dieLabel1;
    private rollempigspackage.DieLabel dieLabel2;
    private javax.swing.JPanel diePanel;
    private java.awt.Label label1;
    private javax.swing.JLabel player1NameLabel;
    private javax.swing.JLabel player1ScoreLabel;
    private javax.swing.JLabel player2NameLabel;
    private javax.swing.JLabel player2ScoreLabel;
    private javax.swing.JButton rollButton;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
}
